/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package risiko;

import java.awt.Component;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Date;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author ikaros
 */
/*
    DESCRIZIONE GENERALE

Menu' che permette di poter creare una nuova partita per poi accedere alla fase
di posizionamento delle armate.
L'utente specifica il nome della partita, il numero dei giocatori con i relativi nomi
e colori.

Tra i controlli presenti vi sono:
- Proibire l'inserimento di una partita con il nome già presente nel database
- Evitare l'inserimento di giocatori/colori identici
- Controlli sui caratteri non consoni quali caratteri speciali e spazi

*/
public class MenuNewPartita extends javax.swing.JFrame {

    /**
     * Creates new form MenuNewPartita
     */
    public MenuNewPartita() {
        initComponents();
        this.setLocationRelativeTo(null); // Inserisco al centro il frame
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jComboBox5 = new javax.swing.JComboBox<>();
        jComboBox6 = new javax.swing.JComboBox<>();
        jComboBox7 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nuova partita");
        setResizable(false);

        jLabel1.setText("Nome partita:");

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3", "4", "5", "6" }));
        jComboBox1.setToolTipText("Seleziona il numero di giocatori");
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel2.setText("N° Giocatori:");

        jButton1.setText("Inizia Partita");
        jButton1.setToolTipText("Pronti per iniziare!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Indietro");
        jButton2.setToolTipText("Torna indietro");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });

        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField3KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3KeyTyped(evt);
            }
        });

        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField4KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField4KeyTyped(evt);
            }
        });

        jTextField5.setEnabled(false);
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField5KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField5KeyTyped(evt);
            }
        });

        jTextField6.setEnabled(false);
        jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField6KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField6KeyTyped(evt);
            }
        });

        jTextField7.setEnabled(false);
        jTextField7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField7KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField7KeyTyped(evt);
            }
        });

        jLabel3.setText("Giocatore 1:");

        jLabel4.setText("Nome Giocatori");

        jLabel5.setText("Giocatore 2:");

        jLabel6.setText("Giocatore 3:");

        jLabel7.setText("Giocatore 4:");

        jLabel8.setText("Giocatore 5:");

        jLabel9.setText("Giocatore 6:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Rosso", "Nero", "Giallo", "Verde", "Blu", "Viola" }));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nero", "Giallo", "Verde", "Blu", "Viola", "Rosso" }));

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Giallo", "Verde", "Blu", "Viola", "Rosso", "Nero" }));

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Verde", "Blu", "Viola", "Rosso", "Nero", "Giallo" }));
        jComboBox5.setEnabled(false);

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Blu", "Viola", "Rosso", "Nero", "Giallo", "Verde" }));
        jComboBox6.setEnabled(false);

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Viola", "Rosso", "Nero", "Giallo", "Verde", "Blu" }));
        jComboBox7.setEnabled(false);

        jLabel10.setText("Colore");

        jLabel11.setText("––––•(-• Ready for war •-)•––––");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jTextField7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                                            .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel10))))
                                .addGap(0, 22, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(jLabel11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // BOTTONE: INDIETRO
        
       /* Richiamo il form MenuBase */
       this.setVisible(false);
       dispose();
       java.awt.EventQueue.invokeLater(new Runnable() {
       public void run() {
         new MenuBase().setVisible(true);
          }
              });
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
      // AZIONE SU COMBO BOX 1 PER LA SELEZIONE DEL NUMERO DEI GIOCATORI 
      
     /* In base alla selezione del numero dei giocari si provvede a:
        refresh delle componenti 
        settaggio delle componenti per adeguarle alle scelte del giocatore
      */
     if(jComboBox1.getSelectedItem().toString().equals("3"))
     {
       SwingUtilities.updateComponentTreeUI(this);
       jTextField5.setEnabled(false);
       jTextField6.setEnabled(false);
       jTextField7.setEnabled(false);
       jComboBox5.setEnabled(false);
       jComboBox6.setEnabled(false);
       jComboBox7.setEnabled(false);
     }
        
     if(jComboBox1.getSelectedItem().toString().equals("4"))
     {
       SwingUtilities.updateComponentTreeUI(this); 
       jTextField5.setEnabled(true);
       jComboBox5.setEnabled(true);
       jTextField6.setEnabled(false);
       jTextField7.setEnabled(false);
       jComboBox6.setEnabled(false);
       jComboBox7.setEnabled(false);
     }
      
    if(jComboBox1.getSelectedItem().toString().equals("5"))
     {
       SwingUtilities.updateComponentTreeUI(this);
       jTextField5.setEnabled(true);
       jTextField6.setEnabled(true);
       jTextField7.setEnabled(false);
       jComboBox5.setEnabled(true);
       jComboBox6.setEnabled(true);
       jComboBox7.setEnabled(false);
     }
        
    if(jComboBox1.getSelectedItem().toString().equals("6"))
     {
       SwingUtilities.updateComponentTreeUI(this);
       jTextField5.setEnabled(true);
       jTextField6.setEnabled(true);
       jTextField7.setEnabled(true);
       jComboBox5.setEnabled(true);;
       jComboBox6.setEnabled(true);
       jComboBox7.setEnabled(true);;       
     }
    }//GEN-LAST:event_jComboBox1ActionPerformed

/* Classe adibita al salvataggio dell'informazione del nome della partita */
public static class salvaPartita
{
   public static String nomePartita = null;  
}   
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // BOTTONE: INIZIA PARTITA
       
        /* Dichiarazione variabili */
        String Nome_Partita= null;
        String[] ControlloColore = new String[6];
        String[] ControlloGiocatore = new String[6];
        int i = 0;
        int j = 0;
        int vuoto = 0;
        int TestErrore = 0;
        Component err = null;
        
        /* Prelevo il nome della partita e lo conservo in salvaPartita */
        Nome_Partita = jTextField1.getText();
        
        /* Verifica che sia presente un nome dato alla partita */
        if(!Nome_Partita.equals(""))
        {
            salvaPartita.nomePartita = Nome_Partita;
      
            /* In base alla scelta dei giocatori si provvede a prelevare i loro nomi e i relativi colori */
            if(jComboBox1.getSelectedItem().toString().equals("3"))
            {
              ControlloGiocatore[0] = jTextField2.getText();
              ControlloGiocatore[1] = jTextField3.getText();
              ControlloGiocatore[2] = jTextField4.getText();
              /* Verifica che siano stati inseriti nomi alfanumeri ai giocatori */
              for(i=0;i<3;i++)
              {
                  vuoto = checkGiocatoreVuoto(ControlloGiocatore[i]);
                  if(vuoto != 0)
                  {
                      TestErrore = 3;
                      break;
                  }
              }
              ControlloColore[0] = jComboBox2.getSelectedItem().toString();
              ControlloColore[1] = jComboBox3.getSelectedItem().toString();
              ControlloColore[2] = jComboBox4.getSelectedItem().toString();
            }

            if(jComboBox1.getSelectedItem().toString().equals("4"))
            {
              ControlloGiocatore[0] = jTextField2.getText();
              ControlloGiocatore[1] = jTextField3.getText();
              ControlloGiocatore[2] = jTextField4.getText();
              ControlloGiocatore[3] = jTextField5.getText();
              /* Verifica che siano stati inseriti nomi alfanumeri ai giocatori */
              for(i=0;i<4;i++)
              {
                  vuoto = checkGiocatoreVuoto(ControlloGiocatore[i]);
                  if(vuoto != 0)
                  {
                      TestErrore = 3;
                      break;
                  }
              }

              ControlloColore[0] = jComboBox2.getSelectedItem().toString();
              ControlloColore[1] = jComboBox3.getSelectedItem().toString();
              ControlloColore[2] = jComboBox4.getSelectedItem().toString();
              ControlloColore[3] = jComboBox5.getSelectedItem().toString();     
            }

           if(jComboBox1.getSelectedItem().toString().equals("5"))
           {
              ControlloGiocatore[0] = jTextField2.getText();
              ControlloGiocatore[1] = jTextField3.getText();
              ControlloGiocatore[2] = jTextField4.getText();
              ControlloGiocatore[3] = jTextField5.getText();
              ControlloGiocatore[4] = jTextField6.getText();
              /* Verifica che siano stati inseriti nomi alfanumeri ai giocatori */
              for(i=0;i<5;i++)
              {
                  vuoto = checkGiocatoreVuoto(ControlloGiocatore[i]);
                  if(vuoto != 0)
                  {
                      TestErrore = 3;
                      break;
                  }
              }

              ControlloColore[0] = jComboBox2.getSelectedItem().toString();
              ControlloColore[1] = jComboBox3.getSelectedItem().toString();
              ControlloColore[2] = jComboBox4.getSelectedItem().toString();
              ControlloColore[3] = jComboBox5.getSelectedItem().toString();
              ControlloColore[4] = jComboBox6.getSelectedItem().toString();
            }


            if(jComboBox1.getSelectedItem().toString().equals("6"))
            {
              ControlloGiocatore[0] = jTextField2.getText();
              ControlloGiocatore[1] = jTextField3.getText();
              ControlloGiocatore[2] = jTextField4.getText();
              ControlloGiocatore[3] = jTextField5.getText();
              ControlloGiocatore[4] = jTextField6.getText();
              ControlloGiocatore[5] = jTextField7.getText();
              /* Verifica che siano stati inseriti nomi alfanumeri ai giocatori */
              for(i=0;i<6;i++)
              {
                  vuoto = checkGiocatoreVuoto(ControlloGiocatore[i]);
                  if(vuoto != 0)
                  {
                      TestErrore = 3;
                      break;
                  }
              }

              ControlloColore[0] = jComboBox2.getSelectedItem().toString();
              ControlloColore[1] = jComboBox3.getSelectedItem().toString();
              ControlloColore[2] = jComboBox4.getSelectedItem().toString();
              ControlloColore[3] = jComboBox5.getSelectedItem().toString();
              ControlloColore[4] = jComboBox6.getSelectedItem().toString();
              ControlloColore[5] = jComboBox7.getSelectedItem().toString();
            }
        
        /* Controllo per la verifica dell'univocità dei colori dei giocatori */
        for(i=0;i<6;i++)
        {
            j=0;
            for(j=0;j<6;j++)
            {
                if((i!=j) && (ControlloColore[i] != null) && (ControlloColore[j] != null ))
                {
                    if(ControlloColore[i].equals(ControlloColore[j]))
                    {
                        TestErrore = 1;
                        break;
                    }
                }
            }
        }
        
       /* Controllo per l'univocità dei nomi del giocatori */
       for(i=0;i<6;i++)
       {
           j=0;
           for(j=0;j<6;j++)
           {         
              if((i!=j) && (ControlloGiocatore[i] != null) && (ControlloGiocatore[j] != null ))
               {
                  if(ControlloGiocatore[i].equals(ControlloGiocatore[j]))
                    {
                        TestErrore = 1;
                        break;
                    }
                }
            }
        }
    } /* Significa che il nome della partita è stato lasciato vuoto */
     else
        TestErrore = 2;
        
        
      /* Caso in cui ci sono colori/giocatori uguali */
      if(TestErrore != 0)
      {
          switch(TestErrore)
          {
              case 1:
                  JOptionPane.showMessageDialog(err,"Ci sono giocatori con lo stesso colore o nome!","Attenzione",JOptionPane.WARNING_MESSAGE);
                  break;
              case 2:
                  JOptionPane.showMessageDialog(err,"Il nome della partita non può essere lasciato vuoto!","Attenzione",JOptionPane.WARNING_MESSAGE);
                  break;
              case 3:
                  JOptionPane.showMessageDialog(err,"I nomi dei giocatori non possono essere lascati vuoti!","Attenzione",JOptionPane.WARNING_MESSAGE);  
                  break;
              default:
                  JOptionPane.showMessageDialog(err,"Errore generico!","Attenzione",JOptionPane.ERROR_MESSAGE);  
                  break;       
          }   
      }
      else
      {
         Query dbms = new Query();
         
         /* Si prende l'id partita, se esiste, del nome della partita che si vuole creare */
         int partita_presente = dbms.checkNomePartita(salvaPartita.nomePartita);
         
         /* Se è diverso da zero allora esista già una partita con il nome scelto */
         if(partita_presente != 0)
         {
           JOptionPane.showMessageDialog(err,"Nome partita già presente! Cambia nome!","Attenzione",JOptionPane.WARNING_MESSAGE);
         }
         else /* La partita non esiste, si procede a crearla */
         {
           
           Insert ins = new Insert();
           /* Inserisco il nome della partita */
           ins.insertPartita(salvaPartita.nomePartita);
                
           /* Il database è gestito in modo tale che il colore verde abbia la lettera V mentre
              al viola è stata assegnata la lettera U.
              Si verifica quindi se un giocatore ha scelto il colore viola per poter cambiare la
              prima lettera in U.
           */ 
           for(i=0;(i<6) && (ControlloGiocatore[i] != null); i++)
            {
              if(ControlloColore[i].equals("Viola"))
                {
                  ControlloColore[i] = "Uiola";
                }
               /* Inserisco il giocatore e il colore assegnato (colore corrispondente dalla singola lettera iniziale */   
               ins.insertGiocatore(ControlloGiocatore[i],ControlloColore[i].substring(0,1));
            }
            
            /* Prendo l'id partita */
            String id_p = dbms.idPartita(salvaPartita.nomePartita);
            
            /* Incremento il turno */
            ins.incrementaTurno(id_p);
                
            /* Prendo il nome della partita */
            String nomepartita = salvaPartita.nomePartita;
            
            /* Uso il nome della partita e ci aggiungo "_log" per la creazione del file per 
               la memorizzazione delle informazioni delle partita.
            */
            nomepartita = nomepartita + "_log.txt";
            
            //File datafile = new File(nomepartita);
            
            /* Ottengo la data odierna */
            java.sql.Date data = new Date(Calendar.getInstance().getTimeInMillis());
               
            try {
                  /* Provvedo alla creazione del file e all'inserimento delle informazioni */
                  FileWriter fileout = new FileWriter(nomepartita,true);
                  BufferedWriter filebuf = new BufferedWriter(fileout);
                  PrintWriter printout = new PrintWriter(filebuf);
                    
                  printout.println("Partita '" + salvaPartita.nomePartita + "' creata in data " + data + ". ID identificativo della partita è: (" + id_p + ").");
                  printout.println("");
                  printout.println("Elenco dei giocatori presenti in partita:");
              
                  for(i=0,j=1;i<6 && (ControlloGiocatore[i] != null);i++,j++)
                   {
                     printout.println("Nickname giocatore [" + j + "]: " + ControlloGiocatore[i] + ". Colore scelto: " + ControlloColore[i] + "");                         
                   }
     
                  printout.println("");
                  printout.println("INIZIO FASE PRELIMINARE!");
                  printout.close();
                 
                } catch (IOException e) 
                     {
                          e.printStackTrace();
                     }
               
                /* Provvedo a chiamare il form per la fase preliminare */
                this.setVisible(false);
                dispose();
                java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                new Preliminare().setVisible(true);
                        }
                });              
            }        
        }   
    }//GEN-LAST:event_jButton1ActionPerformed

    /* Funzione per la verifica che il nome dei giocatori non siano lasciati vuoti */
    public int checkGiocatoreVuoto(String g)
    {
        /* Dichiarazione variabili */
        int check = 0;
        
        if(g.equals("")) check = 1;
       
        return check;
    }
    
    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // KEY TYPED PER EVITARE DI PRENDERE NOMI DI PARTITE MAGGIORI DI 20 CARATTERI E CARATTERI SPECIALI
       
       /* Prendo il carattere digitato */
       char c = evt.getKeyChar();
       /* Verifico che sia accettabile */
       int i = verificaCarattere(c);
       /* Carattere non consono lo scarto */
       if(i != 1) evt.consume();
       /* Imposto lunghezza massima di 20 caratteri */
       if(jTextField1.getText().length()>= 20) evt.consume();
          
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        // KEY TYPED PER IL GIOCATORE 1
        
       /* Prendo il carattere digitato */
       char c = evt.getKeyChar();
       /* Verifico che sia accettabile */
       int i = verificaCarattere(c);
       /* Carattere non consono lo scarto */
       if(i != 1) evt.consume();
       /* Imposto lunghezza massima di 20 caratteri */
       if(jTextField2.getText().length()>= 10) evt.consume();
    }//GEN-LAST:event_jTextField2KeyTyped

    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyTyped
        // KEY TYPED PER IL GIOCATORE 2
        
       /* Prendo il carattere digitato */
       char c = evt.getKeyChar();
       /* Verifico che sia accettabile */
       int i = verificaCarattere(c);
       /* Carattere non consono lo scarto */
       if(i != 1) evt.consume();
       /* Imposto lunghezza massima di 20 caratteri */
       if(jTextField3.getText().length()>= 10) evt.consume();
    }//GEN-LAST:event_jTextField3KeyTyped

    private void jTextField4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyTyped
        // KEY TYPED PER IL GIOCATORE 3
        
       /* Prendo il carattere digitato */
       char c = evt.getKeyChar();
       /* Verifico che sia accettabile */
       int i = verificaCarattere(c);
       /* Carattere non consono lo scarto */
       if(i != 1) evt.consume();
       /* Imposto lunghezza massima di 20 caratteri */
       if(jTextField4.getText().length()>= 10) evt.consume();
    }//GEN-LAST:event_jTextField4KeyTyped

    private void jTextField5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyTyped
        // KEY TYPED PER IL GIOCATORE 4
        
       /* Prendo il carattere digitato */
       char c = evt.getKeyChar();
       /* Verifico che sia accettabile */
       int i = verificaCarattere(c);
       /* Carattere non consono lo scarto */
       if(i != 1) evt.consume();
       /* Imposto lunghezza massima di 20 caratteri */
       if(jTextField5.getText().length()>= 10) evt.consume();
    }//GEN-LAST:event_jTextField5KeyTyped

    private void jTextField6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyTyped
        // KEY TYPED PER IL GIOCATORE 5
        
       /* Prendo il carattere digitato */
       char c = evt.getKeyChar();
       /* Verifico che sia accettabile */
       int i = verificaCarattere(c);
       /* Carattere non consono lo scarto */
       if(i != 1) evt.consume();
       /* Imposto lunghezza massima di 20 caratteri */
       if(jTextField6.getText().length()>= 10) evt.consume();
    }//GEN-LAST:event_jTextField6KeyTyped

    private void jTextField7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField7KeyTyped
        // KEY TYPED PER IL GIOCATORE 6
        
       /* Prendo il carattere digitato */
       char c = evt.getKeyChar();
       /* Verifico che sia accettabile */
       int i = verificaCarattere(c);
       /* Carattere non consono lo scarto */
       if(i != 1) evt.consume();
       /* Imposto lunghezza massima di 20 caratteri */
       if(jTextField7.getText().length()>= 10) evt.consume();
    }//GEN-LAST:event_jTextField7KeyTyped

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
         // KEY PRESSED PER IL NOME DELLA PARTITA
        
        /* Elimino la possibilità di usare incolla */
        jTextField1.setTransferHandler(null);
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        // KEY PRESSED PER IL GIOCATORE NUMERO 1
        
        /* Elimino la possibilità di usare incolla */
        jTextField2.setTransferHandler(null);
    }//GEN-LAST:event_jTextField2KeyPressed

    private void jTextField3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyPressed
        // KEY PRESSED PER IL GIOCATORE NUMERO 2
        
        /* Elimino la possibilità di usare incolla */
        jTextField3.setTransferHandler(null);
    }//GEN-LAST:event_jTextField3KeyPressed

    private void jTextField4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyPressed
        // KEY PRESSED PER IL GIOCATORE NUMERO 3
        
        /* Elimino la possibilità di usare incolla */
        jTextField4.setTransferHandler(null);
    }//GEN-LAST:event_jTextField4KeyPressed

    private void jTextField5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyPressed
         // KEY PRESSED PER IL GIOCATORE NUMERO 4
        
        /* Elimino la possibilità di usare incolla */
        jTextField5.setTransferHandler(null);
    }//GEN-LAST:event_jTextField5KeyPressed

    private void jTextField6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyPressed
        // KEY PRESSED PER IL GIOCATORE NUMERO 5
        
        /* Elimino la possibilità di usare incolla */
        jTextField6.setTransferHandler(null);
    }//GEN-LAST:event_jTextField6KeyPressed

    private void jTextField7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField7KeyPressed
        // KEY PRESSED PER IL GIOCATORE NUMERO 6
        
        /* Elimino la possibilità di usare incolla */
        jTextField7.setTransferHandler(null);
    }//GEN-LAST:event_jTextField7KeyPressed

  /* Funzione adibita alla verifica del carattere preso. Caratteri accettabili hanno 1 di ritorno, 0 altrimenti */
  public static int verificaCarattere(char c)
  {
      int i = 0;
      
      if((c >= '0' && c <= '9') || (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) 
         i = 1;
      
      return i;
  }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuNewPartita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuNewPartita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuNewPartita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuNewPartita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuNewPartita().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JComboBox<String> jComboBox7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    // End of variables declaration//GEN-END:variables
}
