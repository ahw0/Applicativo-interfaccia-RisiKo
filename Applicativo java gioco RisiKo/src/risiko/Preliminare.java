/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package risiko;

import java.awt.Component;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
//import java.util.logging.Level;
//import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static risiko.Combattimento.verificaTerritorio;
//import javax.swing.SwingUtilities;
import static risiko.Query.catturaErrori;

/**
 *
 * @author ikaros
 */
public class Preliminare extends javax.swing.JFrame {

    /**
     * Creates new form Preliminare
     */
    public Preliminare() {
        initComponents();
        this.setLocationRelativeTo(null); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Fase preliminare");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Tocca a");

        jTextField1.setEditable(false);

        jLabel2.setText("I tuoi territori");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("Inserisci");
        jButton1.setToolTipText("Inserisci i carri");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Partita N°");

        jTextField2.setEditable(false);

        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField3KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3KeyTyped(evt);
            }
        });

        jTextField4.setText("3");
        jTextField4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField4KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField4KeyTyped(evt);
            }
        });

        jLabel4.setText("Nome territorio");

        jLabel5.setText("Abilita territorio");

        jLabel6.setText("N° armate");

        jTextField5.setEnabled(false);
        jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField5KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField5KeyTyped(evt);
            }
        });

        jTextField6.setEnabled(false);
        jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField6KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField6KeyTyped(evt);
            }
        });

        jTextField7.setText("0");
        jTextField7.setEnabled(false);
        jTextField7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField7KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField7KeyTyped(evt);
            }
        });

        jTextField8.setText("0");
        jTextField8.setEnabled(false);
        jTextField8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField8KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField8KeyTyped(evt);
            }
        });

        jLabel7.setText("N° armate max da inserire");

        jTextField9.setEditable(false);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jLabel8.setText("Carri sul territorio");

        jLabel9.setText("Il tuo ID");

        jTextField10.setEditable(false);

        jLabel10.setText("N° armate totali");

        jTextField11.setEditable(false);

        jLabel12.setText("N° turno");

        jTextField12.setEditable(false);

        jLabel13.setText("Nome partita");

        jTextField13.setEditable(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Posizionamento");

        jButton2.setText("?");
        jButton2.setToolTipText("help");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(338, 338, 338)
                                .addComponent(jLabel12))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextField9, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(283, 283, 283)
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jCheckBox3)
                                            .addComponent(jCheckBox2))
                                        .addGap(48, 48, 48)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField6)
                                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4)))
                                    .addComponent(jButton1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField4)
                                    .addComponent(jTextField8)
                                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel13))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField2))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2))
                                .addGap(19, 19, 19))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox2)
                                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox3)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jButton2))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField9)
                            .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // BOTTONE: INSERISCI
        
        /* Dichiarazione variabili */
        Component errore = null;
        String cont1 = null;
        int carr1 = 0;
        String cont2 = null;
        int carr2 = 0;
        String cont3 = null;
        int carr3 = 0;
        String id_p = null;
        int id_terr = 0;
        int id_terr2 =0;
        int id_terr3 = 0;
        String g_inCorso = null;
        int g_incorso = 0;
        int err = 0;
        
        Query dbms = new Query();
        
        /* Prendo l'id del giocatore */
        g_inCorso = jTextField10.getText();
        g_incorso = Integer.parseInt(g_inCorso);
        /* Prendo l'id della partita */
        id_p = dbms.idPartita(MenuNewPartita.salvaPartita.nomePartita);
    
    /* Verifico che sia presente almeno un inserimento dei carri */
    if(jTextField3.getText().equals("") || jTextField4.getText().equals("") || jTextField4.getText().equals("0"))
     {
        if(jTextField3.getText().equals(""))
        {
          JOptionPane.showMessageDialog(errore,"Inserire il nome del territorio nel primo campo!","Attenzione",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
          JOptionPane.showMessageDialog(errore,"Il numero delle armate del primo campo deve essere maggiore di 0!","Attenzione",JOptionPane.WARNING_MESSAGE);
        }
        err = 1;
     }
        else
        {  
            /* Prendo il nome del territorio e il numero di armate inserite */
            cont1 = jTextField3.getText();
            carr1 = Integer.parseInt(jTextField4.getText());
            
            /* Prendo l'id del territorio in base al nome */
            id_terr = dbms.idTerritorio(cont1);
            
            /* Il nome del territorio inserito non esiste */
            if(id_terr == 0)
            {
              JOptionPane.showMessageDialog(errore,"Territorio \""+ cont1 +"\" non presente. Verificare la correttezza del nome!","Attenzione",JOptionPane.WARNING_MESSAGE);
              err = 1;
            }
            else
            {
                /* Prendo l'id el giocatore che occupa il territorio */
                int g_occupante = dbms.giocatoreOccupante(id_p, id_terr);
                 
                /* Verifico che il giocatore in corso inserisca in un suo territorio */
                if(g_occupante != g_incorso)
                 {
                   String nik = dbms.nicknameGiocatore(String.valueOf(g_occupante),id_p);
                   JOptionPane.showMessageDialog(errore,"Il territorio \""+ cont1 +"\" non è il tuo!\nAppartiene al giocatore: " + nik,"Attenzione",JOptionPane.WARNING_MESSAGE);     
                   //JOptionPane.showMessageDialog(errore,"Il territorio non è il tuo!","Attenzione",JOptionPane.WARNING_MESSAGE);       
                   err = 1;
                 }
            }
        }   
    
  /* Passaggi del tutto uguali come sopra */   
  if(jCheckBox2.isSelected())
   {
      if(jTextField6.getText().equals("") || jTextField8.getText().equals("") || jTextField8.getText().equals("0") )
        {
          if(jTextField6.getText().equals(""))
          {
             JOptionPane.showMessageDialog(errore,"Inserire il nome del territorio nel secondo campo!","Attenzione",JOptionPane.WARNING_MESSAGE);
          }
          else
          {
             JOptionPane.showMessageDialog(errore,"Il numero delle armate del secondo campo deve essere maggiore di 0!","Attenzione",JOptionPane.WARNING_MESSAGE); 
          }
          err = 1;
        }
        else
        {
          cont2 = jTextField6.getText();
          carr2 = Integer.parseInt(jTextField8.getText());  
           
          id_terr2 = dbms.idTerritorio(cont2);
            
          if(id_terr2 == 0)
            {
               JOptionPane.showMessageDialog(errore,"Territorio \""+ cont2 +"\" non presente. Verificare la corettezza del nome!","Attenzione",JOptionPane.WARNING_MESSAGE);
               err = 1;
            }
            else
            {
             int g_occupante = dbms.giocatoreOccupante(id_p, id_terr2);

                if(g_occupante != g_incorso)
                {
                   String nik = dbms.nicknameGiocatore(String.valueOf(g_occupante),id_p);
                   JOptionPane.showMessageDialog(errore,"Il territorio \""+ cont2 +"\" non è il tuo!\nAppartiene al giocatore: " + nik,"Attenzione",JOptionPane.WARNING_MESSAGE);            
                   err = 1;
                }
            }          
        }     
    }
   
   /* Passaggi del tutto uguali come sopra */
   if(jCheckBox3.isSelected())
   {                 
     if(jTextField5.getText().equals("") || jTextField7.getText().equals("") || jTextField7.getText().equals("0"))
       {
         if(jTextField5.getText().equals(""))
         {
            JOptionPane.showMessageDialog(errore,"Inserire il nome del territorio nel terzo campo!","Attenzione",JOptionPane.WARNING_MESSAGE);
         }
         else
         {
            JOptionPane.showMessageDialog(errore,"Il numero delle armate del terzo campo deve essere maggiore di 0!","Attenzione",JOptionPane.WARNING_MESSAGE); 
         }
         err = 1;
       }
     else
      {
         cont3 = jTextField5.getText();
         carr3 = Integer.parseInt(jTextField7.getText()); 
           
         id_terr3 = dbms.idTerritorio(cont3);
            
         if(id_terr3 == 0)
         {
           JOptionPane.showMessageDialog(errore,"Territorio \""+ cont3 +"\" non presente. Verificare la corettezza del nome!","Attenzione",JOptionPane.WARNING_MESSAGE);
           err = 1;
         }
         else
         {
           int g_occupante = dbms.giocatoreOccupante(id_p, id_terr3);

           if(g_occupante != g_incorso)
            {
               String nik = dbms.nicknameGiocatore(String.valueOf(g_occupante),id_p);
               JOptionPane.showMessageDialog(errore,"Il territorio \""+ cont3 +"\" non è il tuo!\nAppartiene al giocatore: " + nik,"Attenzione",JOptionPane.WARNING_MESSAGE);            
               err = 1;
            }
         }             
      }
    }

    /* Se non si sono sollevati eventuali errori proseguo */
    if(err == 0)
    {
        /* Sommo il numero di armate totali che ha inserito */
        int maxcarri = carr1 + carr2 + carr3;
        /* Prendo il numero esatto massimo di carri che può inserire */
        String n_carri_max = jTextField9.getText();
        int n_carri_ma = Integer.parseInt(n_carri_max);
        
        /* Verifico che abbia inserito il numero corretto di carri in base a quelli che può inserire */
        if(maxcarri != n_carri_ma )
         {
           JOptionPane.showMessageDialog(errore,"Sono stati inseriti un totale di " + maxcarri +" carri mentre il massimo inseribile è " + n_carri_max + "!","Attenzione",JOptionPane.WARNING_MESSAGE);  
         }
        else
        {
             /* Procedo ad inserire le informazioni */
             Insert ins = new Insert();
             /* Inserisco le informzioni del territorio e dei carri inseriti */
             ins.insertPosArmataPrel(id_p, id_terr,carr1);
             /* Prendo il nome del territorio per scriverlo nel file */
             String fileNomeTerr = dbms.nomeTerritorio(String.valueOf(id_terr));
             String file = "Turno n°" + jTextField12.getText();
             Insert.logFile(file);
             file = "Il giocatore " + jTextField1.getText() + " posiziona " + carr1 + " armate sul territorio " + fileNomeTerr;
             Insert.logFile(file);
            
             /* Prendo prima tutta le armate in quel territorio */
             int tot = dbms.armateInTerritorio(id_p,id_terr);
             /* Sommo alla armate che si vogliono inserire */
             tot = tot + carr1;
               
             Update up = new Update();
             /* Procedo all'up delle informazioni correttamente modificate */
             up.updateArmateInTerritorio(id_p, id_terr, tot);
            
             /* Decremento il numero di armate in N_ARMATE_TOT */
             String arm = dbms.armateTotali(id_p, g_inCorso);
             int armateDaDecr = Integer.parseInt(arm);
             armateDaDecr = armateDaDecr - carr1;
             up.upDecrArmate(id_p, g_inCorso, armateDaDecr);
            
            /* Stesso procedimento */
            if(jCheckBox2.isSelected())
               {
                   ins.insertPosArmataPrel(id_p, id_terr2,carr2);
                   tot = dbms.armateInTerritorio(id_p,id_terr2);
                   tot = tot + carr2;
                   up.updateArmateInTerritorio(id_p, id_terr2, tot);
                   fileNomeTerr = dbms.nomeTerritorio(String.valueOf(id_terr2));
                   armateDaDecr = armateDaDecr - carr2;
                   up.upDecrArmate(id_p, g_inCorso, armateDaDecr);
                 
                   file = "Successivamente posiziona " + carr2 + " armate sul territorio " + fileNomeTerr;
                   Insert.logFile(file);
                }
            /* Stesso procedimento */
            if(jCheckBox3.isSelected())
               {
                   ins.insertPosArmataPrel(id_p, id_terr3,carr3);
                   tot = dbms.armateInTerritorio(id_p,id_terr3);
                   tot = tot + carr3;
                   up.updateArmateInTerritorio(id_p, id_terr3, tot);
                   fileNomeTerr = dbms.nomeTerritorio(String.valueOf(id_terr3));
                   armateDaDecr = armateDaDecr - carr3;
                   up.upDecrArmate(id_p, g_inCorso, armateDaDecr);
                     
                   file = "Successivamente posiziona " + carr2 + " armate sul territorio " + fileNomeTerr;
                   Insert.logFile(file);
                }
            
            /* Passo alla seconda fase chiamando il form Combattimento */
            Insert.logFile("");
            this.setVisible(false);
            dispose();
            java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                 new Preliminare().setVisible(true);
                 }
            });   
    
        }
    }
  
            
                  
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // SELEZIONE DEL SECONDO QUADRATINO BELLINO
       
        if(jCheckBox2.isSelected())
        {
           /* Refresh delle componenti */
           revalidate(); 
           repaint();
           jTextField6.enable();
           jTextField8.enable();    
            
        }
        else
        {
           /* Refresh delle componenti */
           revalidate();
           repaint(); 
           jTextField6.disable();
           jTextField8.disable();   
        }        
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // SELEZIONE DEL TERZO QUADRATINO BELLIO
        
       if(jCheckBox3.isSelected())
        {
           /* Refresh delle componenti */
           revalidate();
           repaint();
           jTextField5.enable();
           jTextField7.enable();    
            
        }
        else
        {
           /* Refresh delle componenti */
           revalidate();
           repaint(); 
           jTextField5.disable();
           jTextField7.disable();   
        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // APERTURA DEL FORM: PRELIMINARE
        
        /* Dichiarazione variabili */
        Query dbms = new Query();
        Insert ins = new Insert();
        
        /* Prendo l'id della partita e lo setto */
        String id_p = dbms.idPartita(MenuNewPartita.salvaPartita.nomePartita);
        jTextField2.setText(id_p);
        /* Setto il nome dell partita */
        jTextField13.setText(MenuNewPartita.salvaPartita.nomePartita);
        
        /* Incremento il turno per selezionare il giocaotre */
        ins.incrementaTurno(id_p);
       // System.out.println("HO INCREMENTATO TURNO DELLA PARTITA ID "+id_p);
       // Query.esCommit();
        
        /* Seleziono il valore di turno più grande e lo setto*/
        String id_turno_max = dbms.maxIDTurno(id_p);
        jTextField12.setText(id_turno_max);
       // System.out.println("IL TURNO E':"+id_turno_max);
        
        /* Prelevo i giocatore dell'utlimo turno e lo setto */
        String id_gamer = dbms.idGamer(id_p, id_turno_max);
        jTextField10.setText(id_gamer);    
       // System.out.println("ID GIOCATORE:"+id_gamer);
        
        /* Seleziono il numero di armate totali del giocatore e li setto */
        String armate_totali = dbms.armateTotali(id_p, id_gamer);
        jTextField11.setText(armate_totali);
        int check_armate_tot = Integer.parseInt(armate_totali);
        
        /* Significa che il giocatore ha finito di inserire le armate */
        if(check_armate_tot == 0)
        {
            /* Verifico che tutti i giocatori abbiamo inserito le armate */
            int armate_tot_gioco = dbms.armateTotaliInGioco(id_p);
            
            /* Tutti i giocatori hanno inserito le armate.
               Si passa alla fase successiva
            */
            if(armate_tot_gioco == 0) 
            {
                /* Richiamo il form posizionamento */
                this.setVisible(false);
                dispose();
                java.awt.EventQueue.invokeLater(new Runnable() {
                public void run()
                {
                   new Posizionamento().setVisible(true);
                }
                     });
            }
            else /* Significa che c'è ancora un giocatore che deve inserire le armate */
            {
                /* Richiamo preliminare che incrementando turno 
                passa al giocatore successivo */
                this.setVisible(false);
                dispose();
                java.awt.EventQueue.invokeLater(new Runnable() {
                public void run()
                {
                   new Preliminare().setVisible(true);
                }
                });    
            }
            
        }
        
        /* Se ha ancora più di tre armate setto N°armate max da inserire pari a 3
           come da regolamento */
        if(check_armate_tot > 3)
        {
            jTextField9.setText("3");
        }
        else /* Stampo il valore di armate inferiore a 3 */
        {
            jTextField9.setText(armate_totali);   
        }    
       
       /* Prendo il nik del giocatore e lo setto */
       String nick = dbms.nicknameGiocatore(id_gamer,id_p);
       jTextField1.setText(nick);
       
       /* Dichiarazione variabili */
       Connection conn = null;
       PreparedStatement rset = null;
       
       /* Mostro i territori e le relative armate del giocatore */
       try
       {              
         conn = ConnessioneDB.getDefaultConnection();
         rset = conn.prepareStatement("SELECT ID_TERRITORIO, QUANTITA_TRUPPE FROM TERRITORIO_OCCUPATO WHERE ((GIOCATORE_OCCUPANTE = ?) AND (ID_PARTITA = ?))");
         rset.setString(1,id_gamer);
         rset.setString(2,id_p);
         ResultSet id_territorio_del_giocatore = rset.executeQuery();
                
         while(id_territorio_del_giocatore.next())
          {
             String id_territorio = id_territorio_del_giocatore.getString("ID_TERRITORIO");
             int quantita_truppe = id_territorio_del_giocatore.getInt("QUANTITA_TRUPPE");
             
             String nome_territorio = dbms.nomeTerritorio(id_territorio);
             
             jTextArea1.append(nome_territorio + "\n");
             jTextArea2.append(quantita_truppe + "\n");
          }
       
       }catch(SQLException e)
            {
              catturaErrori(e);
            }finally 
                   { 
                      Query.conrsetClose(conn, rset);
                   }         
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // CHIUSURA MEDIANTE LA X OPPURE KILLANDO IL PROCESSO
        
        /* La chiusura inaspettata dell'applicativo durante la fase preliminare
           viene gestina come un totale abbandono da parte dei giocatori. Si provvede
           quindi ad eliminare anche la partita.
        */
        
        /* Dichiarazione variabili */
        Component err = null;
        
        JOptionPane.showMessageDialog(err,"Chiusura dell'applicativo durante la fase preliminare.\nPer evitare ulteriori problemi, alla chiusura di tale messaggio si provvederà ad eliminare la partita e il file relativo.","Attenzione",JOptionPane.ERROR_MESSAGE); 
        /* Eliminazione del file log e della partita */
        Query.delFile(MenuNewPartita.salvaPartita.nomePartita);
        Query.uscitaForzataDel(MenuNewPartita.salvaPartita.nomePartita);
        
        System.exit(0); 
    }//GEN-LAST:event_formWindowClosing

    private void jTextField4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyTyped
        // KEY TYPED PER EVITARE DI INSERIRE CARATTERI NELLO SPECIFICARE IL NUMERO DI ARMATE
        
       /* Dichiarazione variabili */
       char vchar = evt.getKeyChar();
        
        if(!(Character.isDigit(vchar)) || (vchar == KeyEvent.VK_BACK_SPACE) || (vchar == KeyEvent.VK_DELETE))
        {
           evt.consume();
        } 
        /* Imposto la lunghezza massima */
        if(jTextField4.getText().length()>= 1) evt.consume(); 
    }//GEN-LAST:event_jTextField4KeyTyped

    private void jTextField8KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField8KeyTyped
        // COME SOPRA
        
        /* Dichiarazione variabili */
        char vchar = evt.getKeyChar();
        
        if(!(Character.isDigit(vchar)) || (vchar == KeyEvent.VK_BACK_SPACE) || (vchar == KeyEvent.VK_DELETE))
        {
           evt.consume();
        } 
         /* Imposto la lunghezza massima */
        if(jTextField8.getText().length()>= 1) evt.consume(); 
    }//GEN-LAST:event_jTextField8KeyTyped

    private void jTextField7KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField7KeyTyped
        // COME SOPRA
        
        /* Dichiarazione variabili */
        char vchar = evt.getKeyChar();
        
        if(!(Character.isDigit(vchar)) || (vchar == KeyEvent.VK_BACK_SPACE) || (vchar == KeyEvent.VK_DELETE))
        {
           evt.consume();
        } 
         /* Imposto la lunghezza massima */
        if(jTextField7.getText().length()>= 1) evt.consume(); 
    }//GEN-LAST:event_jTextField7KeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // BOTTONE: ?
        
        /* Dichiarazione variabili */
        Component inf = null;
        JOptionPane.showMessageDialog(inf,"La fase preliminare prevede l'inserimento di un numero massimo di armate pari al valore espresso da \"N° armate max da inserire\".\nIl giocatore può scegliere uno o più territori su cui inserire i carri.\n"
                + "Una volta stabiliti i territori e le armate cliccando su \"Inserisci\" si procede all'inserimento.\n\n<html><b>La fase preliminare termina quando i giocatori finiscono l'inserimento di tutte le armate disponibili espresso da \"N° armate totali\".</b></html>","?",JOptionPane.INFORMATION_MESSAGE);          
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyTyped
      // KEY TYPED PER L'INSERIMENTO CORRETTO DEL NOME DEL PRIMO TERRITORIO 
        
       /* Prendo il carattere digitato */
       char c = evt.getKeyChar();
       /* Verifico che sia accettabile */
       int i = verificaTerritorio(c);
       /* Carattere non consono lo scarto */
       if(i != 1) evt.consume();
       /* Imposto lunghezza massima di 30 caratteri */
       if(jTextField3.getText().length()>= 30) evt.consume(); 
    }//GEN-LAST:event_jTextField3KeyTyped

    private void jTextField6KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyTyped
       // KEY TYPED PER L'INSERIMENTO CORRETTO DEL NOME DEL SECONDO TERRITORIO 
        
       /* Prendo il carattere digitato */
       char c = evt.getKeyChar();
       /* Verifico che sia accettabile */
       int i = verificaTerritorio(c);
       /* Carattere non consono lo scarto */
       if(i != 1) evt.consume();
       /* Imposto lunghezza massima di 30 caratteri */
       if(jTextField6.getText().length()>= 30) evt.consume(); 
    }//GEN-LAST:event_jTextField6KeyTyped

    private void jTextField5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyTyped
       // KEY TYPED PER L'INSERIMENTO CORRETTO DEL NOME DEL TERZO TERRITORIO 
        
       /* Prendo il carattere digitato */
       char c = evt.getKeyChar();
       /* Verifico che sia accettabile */
       int i = verificaTerritorio(c);
       /* Carattere non consono lo scarto */
       if(i != 1) evt.consume();
       /* Imposto lunghezza massima di 30 caratteri */
       if(jTextField5.getText().length()>= 30) evt.consume(); 
    }//GEN-LAST:event_jTextField5KeyTyped

    private void jTextField3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyPressed
        // KEY PRESSED PER IL TERRITORIO NUMERO 1
        
        /* Elimino la possibilità di usare incolla */
        jTextField3.setTransferHandler(null);
    }//GEN-LAST:event_jTextField3KeyPressed

    private void jTextField6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyPressed
        // KEY PRESSED PER IL TERRITORIO NUMERO 2
        
        /* Elimino la possibilità di usare incolla */
        jTextField6.setTransferHandler(null);
    }//GEN-LAST:event_jTextField6KeyPressed

    private void jTextField5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyPressed
        // KEY PRESSED PER IL TERRITORIO NUMERO 3
        
        /* Elimino la possibilità di usare incolla */
        jTextField5.setTransferHandler(null);
    }//GEN-LAST:event_jTextField5KeyPressed

    private void jTextField4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField4KeyPressed
        // KEY PRESSED PER IL NUMERO DI ARMATE DEL TERRITORIO 1
        
        /* Elimino la possibilità di usare incolla */
        jTextField4.setTransferHandler(null);
    }//GEN-LAST:event_jTextField4KeyPressed

    private void jTextField8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField8KeyPressed
        // KEY PRESSED PER IL NUMERO DI ARMATE DEL TERRITORIO 2
        
        /* Elimino la possibilità di usare incolla */
        jTextField8.setTransferHandler(null);
    }//GEN-LAST:event_jTextField8KeyPressed

    private void jTextField7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField7KeyPressed
        // KEY PRESSED PER IL NUMERO DI ARMATE DEL TERRITORIO 3
        
        /* Elimino la possibilità di usare incolla */
        jTextField7.setTransferHandler(null);
    }//GEN-LAST:event_jTextField7KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Preliminare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Preliminare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Preliminare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Preliminare.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Preliminare().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
